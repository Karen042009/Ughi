#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# /ughi_sqlalchemy_mvp/delete_place.py
# ’é’°’µ÷Ä ’ª’∂’ª’•’¨’∏÷Ç ’Ω’Ø÷Ä’´’∫’ø

from app import create_app, db
from app.models import Business, Review


def show_places():
    """’ë’∏÷Ç’µ÷Å ’ø’°’¨ ’¢’∏’¨’∏÷Ä ’æ’°’µ÷Ä’•÷Ä’®"""

    app = create_app()

    with app.app_context():
        places = Business.query.all()

        print(f"\nüìç ‘∏’∂’§’∞’°’∂’∏÷Ç÷Ä ’æ’°’µ÷Ä’•÷Ä: {len(places)}")
        print("=" * 60)

        for i, place in enumerate(places, 1):
            # ’Ä’°’∑’æ’•’¨ ’Ø’°÷Ä’Æ’´÷Ñ’∂’•÷Ä’®
            review_count = Review.query.filter_by(business_id=place.id).count()
            print(
                f"{i:2d}. ID: {place.id:2d} | {place.name:<40} | {place.type:<12} | ‘ø’°÷Ä’Æ’´÷Ñ’∂’•÷Ä: {review_count}"
            )

        return places


def delete_place(place_id):
    """’ã’∂’ª’•’¨ ’æ’°’µ÷Ä’® ID-’∏’æ"""

    app = create_app()

    with app.app_context():
        place = Business.query.get(place_id)
        if not place:
            print(f"‚ùå ’é’°’µ÷Ä ID {place_id} ’π’´ ’£’ø’∂’æ’•’¨")
            return False

        # ’Ä’°’∑’æ’•’¨ ’Ø’°÷Ä’Æ’´÷Ñ’∂’•÷Ä’®
        review_count = Review.query.filter_by(business_id=place_id).count()

        print(f"\n=== ’é’°’µ÷Ä’´ ’ø’æ’µ’°’¨’∂’•÷Ä’® ===")
        print(f"ID: {place.id}")
        print(f"‘±’∂’∏÷Ç’∂: {place.name}")
        print(f"’è’•’Ω’°’Ø: {place.type}")
        print(f"‘ø’∏’∏÷Ä’§’´’∂’°’ø’∂’•÷Ä: {place.latitude}, {place.longitude}")
        print(f"‘ø’°÷Ä’Æ’´÷Ñ’∂’•÷Ä: {review_count}")

        confirm = (
            input(f"\n’ã’∂’ª’•’û’¨ ’°’µ’Ω ’æ’°’µ÷Ä’® ÷á ’∂÷Ä’° ’¢’∏’¨’∏÷Ä ’Ø’°÷Ä’Æ’´÷Ñ’∂’•÷Ä’® (y/n): ").strip().lower()
        )
        if confirm != "y":
            print("‚ùå ’â’•’≤’°÷Ä’Ø’æ’•÷Å")
            return False

        try:
            # ’ã’∂’ª’•’¨ ’Ø’°÷Ä’Æ’´÷Ñ’∂’•÷Ä’®
            if review_count > 0:
                Review.query.filter_by(business_id=place_id).delete()
                print(f"‚úÖ ’ã’∂’ª’æ’•÷Å’´’∂ {review_count} ’Ø’°÷Ä’Æ’´÷Ñ’∂’•÷Ä")

            # ’ã’∂’ª’•’¨ ’æ’°’µ÷Ä’®
            db.session.delete(place)
            db.session.commit()

            print(f"‚úÖ ’é’°’µ÷Ä’® ’∞’°’ª’∏’≤’∏÷Ç’©’µ’°’¥’¢ ’ª’∂’ª’æ’•÷Å")
            return True

        except Exception as e:
            print(f"‚ùå ’ç’≠’°’¨ ’ª’∂’ª’¥’°’∂ ’™’°’¥’°’∂’°’Ø: {e}")
            db.session.rollback()
            return False


def main():
    """’Ä’´’¥’∂’°’Ø’°’∂ ÷Ü’∏÷Ç’∂’Ø÷Å’´’°"""
    print("Ughi (’à÷Ç’≤’´) - ’é’°’µ÷Ä ’ª’∂’ª’•’¨’∏÷Ç ’£’∏÷Ä’Æ’´÷Ñ")
    print("=" * 50)

    while True:
        # ’ë’∏÷Ç’µ÷Å ’ø’°’¨ ’æ’°’µ÷Ä’•÷Ä’®
        places = show_places()

        if not places:
            print("‚ùå ’è’æ’µ’°’¨’∂’•÷Ä’´ ’¢’°’¶’°’µ’∏÷Ç’¥ ’æ’°’µ÷Ä’•÷Ä ’π’Ø’°’∂")
            break

        print("\n" + "=" * 60)
        choice = input(
            "‘∏’∂’ø÷Ä’•÷Ñ ’æ’°’µ÷Ä’´ ’∞’°’¥’°÷Ä’® ’ª’∂’ª’•’¨’∏÷Ç ’∞’°’¥’°÷Ä (’Ø’°’¥ 'q' ’•’¨÷Ñ’´ ’∞’°’¥’°÷Ä): "
        ).strip()

        if choice.lower() == "q":
            break

        try:
            place_index = int(choice) - 1
            if 0 <= place_index < len(places):
                place = places[place_index]
                delete_place(place.id)
            else:
                print("‚ùå ‘±’∂’æ’°’æ’•÷Ä ’∞’°’¥’°÷Ä")
        except ValueError:
            print("‚ùå ‘Ω’∂’§÷Ä’∏÷Ç’¥ ’•’∂÷Ñ ’¥’∏÷Ç’ø÷Ñ’°’£÷Ä’•’¨ ’©’´’æ")

        print("\n" + "=" * 50)
        continue_choice = input("’á’°÷Ä’∏÷Ç’∂’°’Ø’•’û’¨ (y/n): ").strip().lower()
        if continue_choice != "y":
            break

    print("\nüëã ’á’∂’∏÷Ä’∞’°’Ø’°’¨’∏÷Ç’©’µ’∏÷Ç’∂ ÷Ö’£’ø’°’£’∏÷Ä’Æ’¥’°’∂ ’∞’°’¥’°÷Ä!")


if __name__ == "__main__":
    main()
